
Функция СписокGET(Запрос)	
	// Сформировать ответ, возвращаемый HTTP-сервисом.
	Ответ = Новый HTTPСервисОтвет(200);
	// Получить из запроса параметр URL *.
	Признак = Запрос.ПараметрыURL["*"];
	// Сформировать выборку сотрудников.
	Если Признак = "" Тогда
		// Без отбора.
		Выборка = Документы.ПриходнаяНакладная.Выбрать();
	Иначе
		// С отбором по признаку работы.
		Работает = ?(ВРег(Прав(Признак,2)) = "ДА", Истина, Ложь);
		Выборка = Документы.ПриходнаяНакладная.Выбрать(,, Новый Структура("Автор", Справочники.Сотрудники.НайтиПоНаименованию("Иванов И.А.")));
	КонецЕсли;
	// В цикле обхода выборки записать в JSON список сотрудников.
	// Создать объект записи и записать строковое значение в строку JSON.
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку();
	// Записать начало корневого объекта.
	Запись.ЗаписатьНачалоОбъекта();
	Пока Выборка.Следующий() Цикл
		Запись.ЗаписатьИмяСвойства(Строка(Выборка.Ссылка));
		Запись.ЗаписатьНачалоОбъекта();
		Запись.ЗаписатьИмяСвойства("Номер");
		Запись.ЗаписатьЗначение(Выборка.Номер);
		Запись.ЗаписатьИмяСвойства("Автор");
		Запись.ЗаписатьЗначение(Строка(Выборка.Автор));
		Запись.ЗаписатьКонецОбъекта();
	КонецЦикла;
	// Записать конец корневого объекта.
	Запись.ЗаписатьКонецОбъекта();
	// Записать результат записи в строку JSON.
	Результат = Запись.Закрыть();
	// Установить тело ответа из строки Результат.
	Ответ.УстановитьТелоИзСтроки(Результат);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	Возврат Ответ;
КонецФункции

Функция НакладнаяGET(Запрос)
	
	// Сформировать ответ, возвращаемый HTTP-сервисом.
	Ответ = Новый HTTPСервисОтвет(200);
	// Получить из запроса параметр URL Код.
	Номер = Запрос.ПараметрыURL.Получить("Код");
	Если Номер = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки("Не задан параметр Код");
		Ответ.Заголовки.Вставить("Content-type″, ″application/json");
		Возврат Ответ;
	КонецЕсли;
	// Найти сотрудника в справочнике по полученному параметру Код.
	ПриходнаяНакладная = Документы.ПриходнаяНакладная.НайтиПоНомеру(Номер);
	Если ПриходнаяНакладная = Документы.ПриходнаяНакладная.ПустаяСсылка() Тогда
		Ответ = Новый HTTPСервисОтвет(404);
		Ответ.УстановитьТелоИзСтроки("Сотрудник не найден");
		Ответ.Заголовки.Вставить("Content-type″, ″application/json");
		Возврат Ответ;
	КонецЕсли;
	Накладная = ПриходнаяНакладная.ПолучитьОбъект();
	// Сериализовать данные объекта Сотрудник с помощью объекта записи (Запись).
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(ПараметрыЗаписиJSON);
	СериализаторXDTO.ЗаписатьJSON(Запись, Накладная);
	// Записать результат записи в строку JSON.
	Результат = Запись.Закрыть();
	// Установить тело ответа из строки Результат.
	Ответ.УстановитьТелоИзСтроки(Результат);
	Ответ.Заголовки.Вставить("Content-type", "application/json");
	Возврат Ответ;
КонецФункции

Функция НакладнаяDELETE(Запрос)
	// Сформировать ответ (без тела), возвращаемый HTTP-сервисом.
	Ответ = Новый HTTPСервисОтвет(204);
	// Получить из запроса параметр URL Код.
	Номер = Запрос.ПараметрыURL.Получить("Код");
	Если Номер = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки("Не задан параметр Код");
		Ответ.Заголовки.Вставить("Content-type", "application/json");
		Возврат Ответ;
	КонецЕсли;
	// Найти сотрудника в справочнике по полученному параметру Код.
	СотрудникСсылка = Документы.ПриходнаяНакладная.НайтиПоНомеру(Номер);
	Если СотрудникСсылка = Документы.ПриходнаяНакладная.ПустаяСсылка() Тогда
		Ответ = Новый HTTPСервисОтвет(404);
		Ответ.УстановитьТелоИзСтроки("Сотрудник не найден");
		Ответ.Заголовки.Вставить("Content-type", "application/json");
		Возврат Ответ;
	КонецЕсли;
	// Установить найденному сотруднику пометку удаления.
	Сотрудник = СотрудникСсылка.ПолучитьОбъект();
	Сотрудник.УстановитьПометкуУдаления(Истина);
	Сотрудник.Записать();
	Возврат Ответ;
КонецФункции
