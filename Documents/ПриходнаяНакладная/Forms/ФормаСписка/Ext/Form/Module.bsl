
// Команда заполнения документов с веб-приложения.
&НаКлиенте
Процедура СинхронизироватьДокументыOnline(Команда)
	ЗагрузитьДокументы();
КонецПроцедуры

// Загрузка списка документов.
&НаСервереБезКонтекста
Процедура ЗагрузитьДокументы()
	
	// Создать объект чтения и открыть файл, из которого будет выполняться чтение.
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьФайл("http://o-doc.info/api/Document/?format=json");
	
	// Выполнить чтение данных в соответствие Данные с помощью объекта чтения (Чтение).
	Данные = ПрочитатьJSON(Чтение, Истина, "Document_date", ФорматДатыJSON.ISO);
	// Данные = ПрочитатьJSON(Чтение);
	
	// Завершить работу с файлом.
	Чтение.Закрыть();
		
	// Таблица прочитанных документов
	тзДокументы = Новый ТаблицаЗначений;
	тзДокументы.Колонки.Добавить("Дата");
	тзДокументы.Колонки.Добавить("Номер");
	тзДокументы.Колонки.Добавить("Автор");
	тзДокументы.Колонки.Добавить("Комментарий");
	тзДокументы.Колонки.Добавить("ТЧДокумента");
	
	// Табличная часть прочитанного документа
	тзТЧДокумента = Новый ТаблицаЗначений;
	тзТЧДокумента.Колонки.Добавить("Номенклатура");
	тзТЧДокумента.Колонки.Добавить("Количество");
	тзТЧДокумента.Колонки.Добавить("Цена");
	тзТЧДокумента.Колонки.Добавить("Стоимость");	
	
	// Установленная в конфигурации длина номера документа «ПриходнаяНакладная»
	ДлинаНомера = Метаданные.Документы.ПриходнаяНакладная.ДлинаНомера;
	
	// Заполнение тзДокументы документами и их табличными частями по прочитанным данным
	Для Каждого Документ Из Данные Цикл	
		Если Документ["Document_viewmovement"] = Метаданные.Документы.ПриходнаяНакладная.Синоним Тогда	
			СтрокаТЗДокументы = тзДокументы.Добавить();
			СтрокаТЗДокументы.Дата = Документ["Document_date"];
			СтрокаТЗДокументы.Номер = Формат(Число(Документ["Document_number"]), "ЧЦ="+ДлинаНомера+"; ЧВН=; ЧГ=0");
			СтрокаТЗДокументы.Автор = Документ["Document_author"];
			СтрокаТЗДокументы.Комментарий = Документ["Document_comment"];
			
			мзТабличныеЧасти = Документ["tableproducts_set"];
			
			Для каждого СтрокаТовары Из мзТабличныеЧасти Цикл
				СтрокаТЧТовары = тзТЧДокумента.Добавить();
				
				НоменклатураТЧ = НайтиНоменклатуруТЧ(СтрокаТовары["TableProducts_nomenclature"]);
				
				Если ТипЗнч(НоменклатураТЧ) = Тип("СправочникСсылка.Номенклатура") Тогда
					СтрокаТЧТовары.Номенклатура = НоменклатураТЧ;
				Иначе
					обНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
					обНоменклатура.Наименование = НоменклатураТЧ;	
					обНоменклатура.Записать();
					СтрокаТЧТовары.Номенклатура = обНоменклатура.Ссылка;
				КонецЕсли;
				СтрокаТЧТовары.Количество = Число(СтрокаТовары["TableProducts_quantity"]);
				СтрокаТЧТовары.Цена = Число(СтрокаТовары["TableProducts_price"]);
				СтрокаТЧТовары.Стоимость = Число(СтрокаТовары["TableProducts_sum"]);
			КонецЦикла;
			СтрокаТЗДокументы.ТЧДокумента = тзТЧДокумента;
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаДокументов = СуществующиеДокументыВСистеме(тзДокументы);
		
	// Обновление текущих документов
	Пока ВыборкаДокументов.Следующий() Цикл
		СтрокаДанныеЗаполнения = тзДокументы.Найти(ВыборкаДокументов.Номер, "Номер");
		обДок = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
		ЗаполнитьДокумент(обДок, СтрокаДанныеЗаполнения);
		ЗаполнитьТабличнуюЧасть(обДок, СтрокаДанныеЗаполнения);
		обДок.Записать();
		тзДокументы.Удалить(СтрокаДанныеЗаполнения);
	КонецЦикла;
	
	// Добавление документов, которые не были найдены в системе
	Если ЗначениеЗаполнено(тзДокументы) Тогда
		Для каждого Документ Из тзДокументы Цикл
			обДок = Документы.ПриходнаяНакладная.СоздатьДокумент();
			ЗаполнитьДокумент(обДок, Документ);
			ЗаполнитьТабличнуюЧасть(обДок, Документ);
			обДок.Записать(РежимЗаписиДокумента.Проведение);
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

// Поиск автора в системе.
&НаСервереБезКонтекста
Функция НайтиАвтораДокумента(Знач Автор)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Автор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументов = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДокументов.Следующий() Цикл
		Автор = ВыборкаДокументов.Ссылка;
	КонецЦикла;
	
	Возврат Автор;
КонецФункции

// Поиск номенклатуры в системе.
&НаСервереБезКонтекста
Функция НайтиНоменклатуруТЧ(Знач Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументов = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДокументов.Следующий() Цикл
		Номенклатура = ВыборкаДокументов.Ссылка;
	КонецЦикла;
	
	Возврат Номенклатура;
КонецФункции

// Заполнение документа по прочитанным данным.
&НаСервереБезКонтекста
Процедура ЗаполнитьДокумент(обДок, ДанныеЗаполнения)
	// Обновление даты
	обДок.Дата = ДанныеЗаполнения.Дата;
	
	// Обновление автора документа
	АвторДокумента = НайтиАвтораДокумента(ДанныеЗаполнения.Автор);
	Если ТипЗнч(АвторДокумента) = Тип("СправочникСсылка.Сотрудники") Тогда
		обДок.Автор = АвторДокумента;
	Иначе
		обСотрудник = Справочники.Сотрудники.СоздатьЭлемент();
		обСотрудник.Наименование = АвторДокумента;	
		обСотрудник.Записать();
		обДок.Автор = обСотрудник.Ссылка;
	КонецЕсли; 
	
	// Обновление комментария
	обДок.Комментарий = ДанныеЗаполнения.Комментарий;
	
	// Обновление номера
	обДок.Номер = ДанныеЗаполнения.Номер;
	
КонецПроцедуры

// Заполнение табличной части по прочитанным данным.
&НаСервереБезКонтекста
Процедура ЗаполнитьТабличнуюЧасть(обДок, ДанныеЗаполнения)
	Для каждого СтрокаТовар Из ДанныеЗаполнения.ТЧДокумента Цикл
		СтрокаВДокументе = обДок.Товары.Найти(СтрокаТовар.Номенклатура, "Номенклатура");
		Если ЗначениеЗаполнено(СтрокаВДокументе) Тогда
			СтрокаВДокументе.Количество = СтрокаТовар.Количество;
			СтрокаВДокументе.Стоимость = СтрокаТовар.Стоимость;			
			СтрокаВДокументе.Цена = СтрокаТовар.Цена;
		Иначе
			НоваяСтрокаВДокументе = обДок.Товары.Добавить();
			НоваяСтрокаВДокументе.Номенклатура = СтрокаТовар.Номенклатура;
			НоваяСтрокаВДокументе.Количество = СтрокаТовар.Количество;
			НоваяСтрокаВДокументе.Стоимость = СтрокаТовар.Стоимость;			
			НоваяСтрокаВДокументе.Цена = СтрокаТовар.Цена;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

// Поиск документов в системе по номеру.
&НаСервереБезКонтекста
Функция СуществующиеДокументыВСистеме(тзДокументы)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходнаяНакладная.Ссылка КАК Ссылка,
	|	ПриходнаяНакладная.ВерсияДанных КАК ВерсияДанных,
	|	ПриходнаяНакладная.ПометкаУдаления КАК ПометкаУдаления,
	|	ПриходнаяНакладная.Номер КАК Номер,
	|	ПриходнаяНакладная.Дата КАК Дата,
	|	ПриходнаяНакладная.Проведен КАК Проведен,
	|	ПриходнаяНакладная.Автор КАК Автор,
	|	ПриходнаяНакладная.Комментарий КАК Комментарий,
	|	ПриходнаяНакладная.Товары.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		Цена КАК Цена,
	|		Стоимость КАК Стоимость
	|	) КАК Товары
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|ГДЕ
	|	ПриходнаяНакладная.Номер В(&мНомера)";
	
	Запрос.УстановитьПараметр("мНомера", тзДокументы.ВыгрузитьКолонку("Номер"));
	РезультатЗапроса = Запрос.Выполнить();
	Возврат РезультатЗапроса.Выбрать();
КонецФункции